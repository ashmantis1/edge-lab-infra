# Ansible details
ansible_user: cloud-user
ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
#Node details
#These are the nodes that the vm's will be deployed to, in sequential order, eg. master01 will be deployed to nodes[0]. Use proxmox node names
vm:
  target_nodes: ["vm01","vm02","vm03"] # List of nodes to deploy the masters to must match master count (max )
  template: fedora41
  count: 3
  primary_count: 1
  cpu: 4
  memory: 4096
  disk_size: 30 # Disk size for root drive of VM in GB
  storage_pool: "local-lvm"
  bridge: "vmbr0"
  tag: 4000
  tags: "infra"
  dns_server: 1.1.1.1
  search_domain: infra.ashman.world # Not currently being used because proxmox is broken
  ssh_pub_key: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIF6leLiXjd46rW2/bKTyFtEBXv8A47Ti0kd49CcexgLy asher@fedora
  network_gateway: "{{ network.infra.gateway }}"
  network_subnet: "{{ network.infra.subnet }}"
  network_mask: "{{ network.infra.mask }}"
  network_start_ip: "{{ network.infra.start_ip.freeipa }}"
  description: "FreeIPA hosts deployed by terraform"
  additional_networks: []

#Hostname details
service_name: ipa
dns_zone: infra.ashman.world

# IPA Server Details
ipaserver_domain: infra.ashman.world
ipaserver_realm: INFRA.ASHMAN.WORLD
ipaserver_setup_dns: true
ipaserver_setup_ca: true
ipaserver_auto_forwarders: true
ipaserver_allow_zone_overlap: true
ipaserver_random_serial_numbers: true
ipaadmin_password: "{{ vault_ipaadmin_password }}"
ipadm_password: "{{ vault_ipadm_password }}"

# IPA Client
ipaclient_force_join: true
ipaclient_mkhomedir: true

# IPA Replica Details
ipareplica_allow_zone_overlap: true
ipareplica_setup_dns: true
ipareplica_setup_ca: true
ipareplica_auto_forwarders: true

ipa_acme_enabled: true
ipa_dns:
  config:
    forwarders:
      - ip_address: 1.1.1.1
      - ip_address: 8.8.8.8
  reverse_zones:
    - ip: 10.140.0.0/22
      dynamic_update: true
      allow_sync_ptr: true
    - ip: 10.110.0.0/24
      dynamic_update: true
      allow_sync_ptr: true
  zones:
    - name: svc.ashman.world
      dynamic_update: true
      allow_sync_ptr: true
      skip_overlap_check: false
      update_policy: ""
    - name: k8s.ashman.world
      dynamic_update: true
      allow_sync_ptr: true
      skip_overlap_check: false
      update_policy: " grant acme-update wildcard * ANY;"
    - name: apps.ashman.world
      dynamic_update: true
      allow_sync_ptr: true
      skip_overlap_check: false
      update_policy: " grant acme-update wildcard * ANY;"
    - name: ashman.world
      dynamic_update: true
      allow_sync_ptr: true
      skip_overlap_check: true
      update_policy: ""
  records:
    - zone_name: infra.ashman.world
      name: qdev01
      record_type: A
      record_value:
        - 10.110.0.53
    - zone_name: infra.ashman.world
      name: vm01
      record_type: A
      record_value:
        - 10.110.0.50
    - zone_name: infra.ashman.world
      name: vm02
      record_type: A
      record_value:
        - 10.110.0.51
    - zone_name: infra.ashman.world
      name: pmtp
      record_type: A
      record_value:
        - 10.110.0.53
    - zone_name: infra.ashman.world
      name: storage
      record_type: A
      record_value:
        - 10.110.0.20
    - zone_name: infra.ashman.world
      name: pihole
      record_type: A
      record_value:
        - 10.110.0.100
    - zone_name: infra.ashman.world
      name: router
      record_type: A
      record_value:
        - 10.110.0.1
    - zone_name: k8s.ashman.world
      name: api.infra
      record_type: A
      record_value:
        - 10.110.0.150
    - zone_name: ashman.world
      name: ipa01.infra
      record_type: A
      record_value:
        - 10.110.0.10
    - zone_name: ashman.world
      name: ipa02.infra
      record_type: A
      record_value:
        - 10.110.0.11
          

ipa_service_accounts:
  - name: svc-host-enroll
    first: Host
    last: Enroll
    loginshell: "/sbin/nologin"
    passwordexpiration: "2099-01-01 23:59:59"
    password: "{{ vault_ipa_service_accounts.svc_host_enroll.password }}"
  - name: svc-ansible-infra
    first: Ansible
    last: Infrastructure
    loginshell: "/bin/bash"
    passwordexpiration: "2099-01-01 23:59:59"
    password: "{{ vault_ipa_service_accounts.svc_ansible_infra.password }}"
  - name: svc-proxmox-bind
    first: Proxmox
    last: Bind
    loginshell: "/sbin/nologin"
    passwordexpiration: "2099-01-01 23:59:59"
    password: "{{ vault_ipa_service_accounts.svc_proxmox_bind.password }}"
  - name: svc-keycloak-bind
    first: Keycloak
    last: Bind
    loginshell: "/sbin/nologin"
    passwordexpiration: "2099-01-01 23:59:59"
    password: "{{ vault_ipa_service_accounts.svc_keycloak_bind.password }}"

ipa_permissions:
  - name: "Modify Host - Description"
    object_type: host
    right: write
    attrs:
      - description

ipa_privileges:
  - name: "Host Enrollment"
    permission:
    - "Modify Host - Description"
    - "System: Add Hosts"
    - "System: Add krbPrincipalName to a Host"
    - "System: Enroll a Host"
    - "System: Manage Host Certificates"
    - "System: Manage Host Enrollment Password"
    - "System: Manage Host Keytab"
    - "System: Manage Host Principals"

ipa_roles:
  - name: HostEnroll
    user:
      - svc-host-enroll
    privilege:
      - 'Host Enrollment'

ipa_usergroups:
  - name: services-admins
  - name: k8s-admins
  - name: infra-admins
  - name: media-users
  - name: media-admins
  - name: service-accounts

ipa_hostgroups:
  - name: services
  - name: kubernetes
  - name: infrastructure

ipa_automember_rules:
  - name: services
    description: "Automember condition for svc domain"
    automember_type: hostgroup
    inclusive:
      - key: fqdn
        expression: "^.*.svc.ashman.world$"
  - name: kubernetes
    description: "Automember condition for k8s domain"
    automember_type: hostgroup
    inclusive:
      - key: fqdn
        expression: "^.*.k8s.ashman.world$"
  - name: infrastructure
    description: "Automember condition for infrastructure domain"
    automember_type: hostgroup
    inclusive:
      - key: fqdn
        expression: "^.*.infra.ashman.world$"
    exclusive:
      - key: fqdn
        expression: "^ipa.*.infra.ashman.world$"
  - name: infra-admins
    description: "Automember condition for infra-admins"
    automember_type: group
    inclusive:
      - key: uid
        expression: "^svc\\-.*\\-infra$"
  - name: service-accounts
    description: "Automember condition for service-accounts group"
    automember_type: group
    inclusive:
      - key: uid
        expression: "^svc\\-.*"

ipa_hbac_rules:
  - name: services_admins_allow
    description: "Allow services-admins access to services hostgroup"
    hostgroup:
      - services
    group:
      - services-admins
    servicecategory: all
  - name: k8s_admins_allow
    description: "Allow k8s-admins access to kubernetes hostgroup"
    hostgroup:
      - kubernetes
    group:
      - k8s-admins
    servicecategory: all
  - name: infra_admins_allow
    description: "Allow infra-admins access to infrastructure hostgroup"
    hostgroup:
      - infrastructure
    group:
      - infra-admins
    servicecategory: all

ipa_sudo_rules:
  - name: services_admin_all
    description: "Allow services-admins to run sudo on services hosts"
    hostgroup:
      - services
    group:
      - services-admins
    cmdcategory: all
  - name: k8s_admins_all
    description: "Allow k8s-admins run sudo on kubernetes hostrgoup"
    hostgroup:
      - kubernetes
    group:
      - k8s-admins
    cmdcategory: all
  - name: infra_admins_all
    description: "Allow infra-admins run sudo on infrastructure hostrgoup"
    hostgroup:
      - infrastructure
    group:
      - infra-admins
    cmdcategory: all
