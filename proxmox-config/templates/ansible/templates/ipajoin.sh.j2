#!/bin/bash
service_exists() {
    local n=$1
    if [[ $(systemctl list-units --all -t service --full --no-legend "$n.service" | sed 's/^\s*//g' | cut -f1 -d' ') == $n.service ]]; then
        return 0
    else
        return 1
    fi
}
out=$(curl "{{ pmtp_url }}?hostname=$(hostname)")
echo "Hostname: $(hostname)"
echo "PMTP Output: ${out}"
fqdn=$(echo $out | jq '.fqdn')
tags=$(echo $out | jq '.tags')
ipajoin=$( echo $tags | jq 'any(. == "{{ ipa_enroll_tag }}")')

if [[ "${fqdn}" == \"\" ]]
then
        exit 1
fi

if [[ $ipajoin != "true" ]]
then
        exit 1
fi

IP=$(ip -o route get to 8.8.8.8 | sed -n 's/.*src \([0-9.]\+\).*/\1/p')
DOMAIN=$(echo $fqdn | tr -d \")
echo "${IP} ${DOMAIN}" >> /etc/hosts

hostnamectl set-hostname $fqdn

echo "nameserver $(dig +short {{ ipa_server }})" >> /etc/resolv.conf

if service_exists systemd-resolved
then
  systemctl disable --now systemd-resolved
  systemctl  mask systemd-resolved
fi

ipa-client-install --domain="{{ ipa_domain }}" -p "{{ ipa_enroll_user }}" -w "{{ ipa_enroll_password }}"  -U --enable-dns-updates --mkhomedir --force-join

if [ $? -ne 0 ]
then
  exit 1
fi

if service_exists systemd-resolve
then
  systemctl  unmask systemd-resolved
  systemctl enable --now systemd-resolved
fi

systemctl restart sssd.service

systemctl enable --now oddjobd.service

rm -f /etc/sudoers.d/*
